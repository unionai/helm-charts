apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "union-operator.fullname" . }}
  labels:
    {{- include "operator.labels" . | nindent 4 }}
spec:
  {{- if not .Values.operator.autoscaling }}
  replicas: {{ .Values.operator.replicas }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "operator.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        configChecksum: {{ include (print .Template.BasePath "/operator/configmap.yaml") . | sha256sum | trunc 63 | quote }}
        {{- with .Values.operator.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
        {{- include "global.podAnnotations" . | nindent 8 }}
      labels:
        {{ include "operator.podLabels" . | nindent 8 }}
    spec:
      priorityClassName: {{ .Values.operator.priorityClassName }}
      {{- with .Values.operator.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "operator.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.operator.podSecurityContext | nindent 8 }}
      volumes:
        - name: config-volume
          configMap:
            name: {{ include "union-operator.fullname" . }}
        - name: secret-volume
          secret:
            secretName: {{ .Values.operator.secretName }}
      containers:
        - name: operator
          securityContext:
            {{- toYaml .Values.operator.securityContext | nindent 12 }}
          image: "{{ .Values.image.union.repository }}:{{ .Values.image.union.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.union.pullPolicy }}
          terminationMessagePolicy: FallbackToLogsOnError
          resources:
            {{- toYaml .Values.operator.resources | nindent 12 }}
          volumeMounts:
            - mountPath: /etc/union/config
              name: config-volume
            - mountPath: /etc/union/secret
              name: secret-volume
          env:
            {{- include "global.podEnvVars" . | nindent 10 }}
            {{- with .Values.operator.podEnv }}
            {{- toYaml . | nindent 10 }}
            {{- end }}
          args:
            - operator
            - serve
            - --config
            - /etc/union/config/*.yaml
            - --operator.clusterId.name
            - "$(CLUSTER_NAME)"
            - --operator.tunnel.k8sSecretName
            - {{ .Values.operator.secretName }}
          ports:
            - name: grpc
              containerPort: 8080
              protocol: TCP
            - name: http
              containerPort: 8089
              protocol: TCP
            - name: debug
              containerPort: 10254
              protocol: TCP
        {{- if .Values.operator.enableTunnelService }}
        - name: "tunnel"
          securityContext:
            {{- toYaml .Values.operator.securityContext | nindent 12 }}
          image: "{{ .Values.image.union.repository }}:{{ .Values.image.union.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.union.pullPolicy }}
          args:
            - cloudflared
            - tunnel
            - --no-autoupdate
            - run
            - --token
            - $(TUNNEL_TOKEN)
          env:
            - name: TUNNEL_TOKEN
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.operator.secretName }}
                  key: tunnel_token
                  optional: true
        {{- end }}
      {{- include "operator.scheduling" . | nindent 6 }}
      {{- include "additionalPodSpec" . | nindent 6 }}
