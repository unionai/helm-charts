{{- define "usageGrpcRoutes" -}}
{{- if .Values.services.usage.configMap.billing.enable }}
- path: /cloudidl.usage.UsageService/*
  pathType: ImplementationSpecific
  backend:
    service:
      name: usage
      port:
        number: 80
- path: /cloudidl.usage.UsageService
  pathType: ImplementationSpecific
  backend:
    service:
      name: usage
      port:
        number: 80
{{- else -}}
- path: /cloudidl.usage.UsageService(/(?!GetCustomMeasuresNames|GetMeasureGroup|GetMeasureGroups|GetBillableMeasures|GetBillingInfo|ReportBillableUsage|ReportServerlessBillableUsage|CreateCustomer|AttachBillingPlanToCustomer|GetCustomerCredits|EnqueueMetronomeRequest|EnqueueStripeRequest|GetOrgCheckoutSession).*|$)
  pathType: ImplementationSpecific
  backend:
    service:
      name: usage
      port:
        number: 80
{{- end }}
{{- end }}

{{- define "usageHttpRoutes" -}}
{{- if .Values.services.usage.configMap.billing.enable }}
- path: /usage/*
  pathType: ImplementationSpecific
  backend:
    service:
      name: usage
      port:
        number: 81
- path: /usage
  pathType: ImplementationSpecific
  backend:
    service:
      name: usage
      port:
        number: 81
{{- else -}}
- path: /usage/api/v1(/(?!custom_measures_names|measure_group|measure_groups|billable_measures|billing_info|report_billable_usage|customer_credits|checkout_session).*|$)
  pathType: ImplementationSpecific
  backend:
    service:
      name: usage
      port:
        number: 81
{{- end }}
{{- end }}

{{- define "control-plane-library.usage-ingress" }}
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ template "flyte.name" . }}-usage-grpc
  namespace: {{ template "flyte.namespace" . }}
  {{- with .Values.ingress.annotations }}
  annotations: {{ tpl (toYaml .) $ | nindent 4}}
  {{- end }}
  {{- with .Values.ingress.annotationsUnary }}
  {{- toYaml . | nindent 4 }}
  {{- end}}
  {{- if .Values.ingress.separateGrpcIngress }}
  {{- with .Values.ingress.separateGrpcIngressAnnotations }}
  {{- toYaml . | nindent 4 }}
  {{- end }}
  {{- end }}
  {{- with .Values.ingress.protectedIngressAnnotationsGrpc }}
  {{- toYaml . | nindent 4 }}
  {{- end}}
  {{- if not .Values.services.usage.configMap.billing.enable }}
    nginx.ingress.kubernetes.io/use-regex: "true"
  {{- end }}
spec:
  {{- with .Values.ingress.className }}
  ingressClassName: {{ . | quote }}
  {{- end }}
  {{- with .Values.ingress.tls }}
  tls:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  rules:
    - {{ with .Values.ingress.host -}}
      host: {{ . }}
      {{- end -}}
      http:
        paths:
          {{- include "usageGrpcRoutes" . | nindent 10 }}
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ template "flyte.name" . }}-usage
  namespace: {{ template "flyte.namespace" . }}
  {{- with .Values.ingress.annotations }}
  annotations: {{ tpl (toYaml .) $ | nindent 4}}
  {{- end }}
  {{- with .Values.ingress.annotationsUnary }}
  {{- toYaml . | nindent 4 }}
  {{- end}}
  {{- if .Values.ingress.enableProtectedConsoleIngress }}
  {{- with .Values.ingress.protectedIngressAnnotationsWithoutSignin }}
  {{- toYaml . | nindent 4 }}
  {{- end}}
  {{- else }}
  {{- with .Values.ingress.protectedIngressAnnotations }}
  {{- toYaml . | nindent 4 }}
  {{- end}}
  {{- end}}
  {{- if not .Values.services.usage.configMap.billing.enable }}
    nginx.ingress.kubernetes.io/use-regex: "true"
  {{- end }}
spec:
  {{- with .Values.ingress.className }}
  ingressClassName: {{ . | quote }}
  {{- end }}
  {{- with .Values.ingress.tls }}
  tls:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  rules:
    - {{ with .Values.ingress.host -}}
      host: {{ . }}
      {{- end -}}
      http:
        paths:
          {{- include "usageHttpRoutes" . | nindent 10 -}}
{{- end }}

